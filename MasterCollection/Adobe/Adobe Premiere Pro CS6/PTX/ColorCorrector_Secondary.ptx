	.version 2.3
	.target sm_20
	.address_size 64
	// compiled with C:\mightykilt64/shared/adobe/MediaCore//External/3rdParty/NVIDIA/CUDA/win/bin/../open64/lib//be.exe
	// nvopencc 4.0 built on 2011-05-13

	.visible .func (.param .f32 __cudaretf__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters) _Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters (.param .align 16 .b8 __cudaparmf1__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters[16], .param .u64 __cudaparmf2__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters)

	//-----------------------------------------------------------
	// Compiling C:/Users/dvaeng/AppData/Local/Temp/tmpxft_00003684_00000000-11_ColorCorrector_Secondary.cpp3.i (C:/Users/dvaeng/AppData/Local/Temp/ccBI#.a14132)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_20, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/dvaeng/AppData/Local/Temp/tmpxft_00003684_00000000-10_ColorCorrector_Secondary.cudafe2.gpu"
	.file	2	"C:\mightykilt64\shared\adobe\MediaCore\GPUFoundation\API\Inc\GPUFoundation/KernelSupport/DevicePixelFormat.h"
	.file	3	"C:\mightykilt64\shared\adobe\MediaCore\Renderers\RendererGPU\Inc\Effects/ColorCorrector_Secondary.h"
	.file	4	"C:\mightykilt64\shared\adobe\MediaCore\GPUFoundation\API\Inc\GPUFoundation/KernelSupport/PixelRGB.h"
	.file	5	"C:\mightykilt64\shared\adobe\MediaCore\GPUFoundation\API\Inc\GPUFoundation/KernelSupport/PixelYUV.h"
	.file	6	"C:\mightykilt64\shared\adobe\MediaCore\GPUFoundation\API\Inc\GPUFoundation/KernelSupport/PixelHSL.h"
	.file	7	"c:\program files (x86)\microsoft visual studio 10.0\vc\include\codeanalysis\sourceannotations.h"
	.file	8	"C:\mightykilt64\shared\adobe\MediaCore\External\3rdParty\NVIDIA\CUDA\win\include\crt/device_runtime.h"
	.file	9	"C:\mightykilt64\shared\adobe\MediaCore\External\3rdParty\NVIDIA\CUDA\win\include\host_defines.h"
	.file	10	"C:\mightykilt64\shared\adobe\MediaCore\External\3rdParty\NVIDIA\CUDA\win\include\builtin_types.h"
	.file	11	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\device_types.h"
	.file	12	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\driver_types.h"
	.file	13	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\surface_types.h"
	.file	14	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\texture_types.h"
	.file	15	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\vector_types.h"
	.file	16	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\builtin_types.h"
	.file	17	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\host_defines.h"
	.file	18	"C:\mightykilt64\shared\adobe\MediaCore\External\3rdParty\NVIDIA\CUDA\win\include\device_launch_parameters.h"
	.file	19	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\crt\storage_class.h"
	.file	20	"C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\INCLUDE\time.h"
	.file	21	"C:/mightykilt64/shared/adobe/MediaCore/Renderers/RendererGPU/Src/Effects/ColorCorrector_Secondary.cu"
	.file	22	"C:\mightykilt64\shared\adobe\MediaCore\External\3rdParty\NVIDIA\CUDA\win\include\common_functions.h"
	.file	23	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\math_functions.h"
	.file	24	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\math_constants.h"
	.file	25	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\device_functions.h"
	.file	26	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\sm_11_atomic_functions.h"
	.file	27	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\sm_12_atomic_functions.h"
	.file	28	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\sm_13_double_functions.h"
	.file	29	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\sm_20_atomic_functions.h"
	.file	30	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\sm_20_intrinsics.h"
	.file	31	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\surface_functions.h"
	.file	32	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\texture_fetch_functions.h"
	.file	33	"c:\mightykilt64\shared\adobe\mediacore\external\3rdparty\nvidia\cuda\win\include\math_functions_dbl_ptx3.h"
	.file	34	"C:\mightykilt64\shared\adobe\MediaCore\GPUFoundation\API\Inc\GPUFoundation/KernelSupport/ColorSpaceConvert.h"


	.visible .func (.param .f32 __cudaretf__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters) _Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters (.param .align 16 .b8 __cudaparmf1__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters[16], .param .u64 __cudaparmf2__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters)
	{
	.reg .u32 %r<94>;
	.reg .u64 %rd<4>;
	.reg .f32 %f<312>;
	.reg .pred %p<70>;
	.loc	21	53	0
$LDWbegin__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters:
	ld.param.f32 	%f1, [__cudaparmf1__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters+4];
	mov.f32 	%f2, %f1;
	ld.param.f32 	%f3, [__cudaparmf1__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters+8];
	mov.f32 	%f4, %f3;
	ld.param.f32 	%f5, [__cudaparmf1__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters+12];
	mov.f32 	%f6, %f5;
	ld.param.u64 	%rd1, [__cudaparmf2__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters];
	mov.s64 	%rd2, %rd1;
	mov.f32 	%f7, 0f3f728f61;     	// 0.9475
	mul.ftz.f32 	%f8, %f2, %f7;
	mov.f32 	%f9, 0f3ea3b6e9;     	// 0.319755
	mul.ftz.f32 	%f10, %f2, %f9;
	mov.f32 	%f11, 0fbea3b6e9;    	// -0.319755
	fma.rn.ftz.f32 	%f12, %f11, %f4, %f8;
	mov.f32 	%f13, 0fbf728f61;    	// -0.9475
	mul.ftz.f32 	%f14, %f13, %f4;
	sub.ftz.f32 	%f15, %f14, %f10;
	abs.ftz.f32 	%f16, %f12;
	abs.ftz.f32 	%f17, %f15;
	mov.b32 	%r1, %f15;
	and.b32 	%r2, %r1, -2147483648;
	mov.f32 	%f18, 0f00000000;    	// 0
	set.eq.ftz.u32.f32 	%r3, %f16, %f18;
	neg.s32 	%r4, %r3;
	mov.f32 	%f19, 0f00000000;    	// 0
	set.eq.ftz.u32.f32 	%r5, %f17, %f19;
	neg.s32 	%r6, %r5;
	and.b32 	%r7, %r4, %r6;
	mov.u32 	%r8, 0;
	setp.eq.s32 	%p1, %r7, %r8;
	@%p1 bra 	$Lt_0_59394;
	.loc	23	1998	0
	mov.s32 	%r9, 1078530011;
	mov.s32 	%r10, 0;
	mov.b32 	%r11, %f12;
	mov.s32 	%r12, 0;
	setp.lt.s32 	%p2, %r11, %r12;
	selp.s32 	%r13, %r9, %r10, %p2;
	or.b32 	%r14, %r13, %r2;
	mov.b32 	%f20, %r14;
	bra.uni 	$Lt_0_59650;
$Lt_0_59394:
	mov.f32 	%f21, 0f7f800000;    	// 1.#INF
	set.eq.ftz.u32.f32 	%r15, %f16, %f21;
	neg.s32 	%r16, %r15;
	mov.f32 	%f22, 0f7f800000;    	// 1.#INF
	set.eq.ftz.u32.f32 	%r17, %f17, %f22;
	neg.s32 	%r18, %r17;
	and.b32 	%r19, %r16, %r18;
	mov.u32 	%r20, 0;
	setp.eq.s32 	%p3, %r19, %r20;
	@%p3 bra 	$Lt_0_59906;
	.loc	23	2001	0
	mov.s32 	%r21, 1075235812;
	mov.s32 	%r22, 1061752795;
	mov.b32 	%r23, %f12;
	mov.s32 	%r24, 0;
	setp.lt.s32 	%p4, %r23, %r24;
	selp.s32 	%r25, %r21, %r22, %p4;
	or.b32 	%r26, %r25, %r2;
	mov.b32 	%f20, %r26;
	bra.uni 	$Lt_0_59650;
$Lt_0_59906:
	.loc	23	1323	0
	min.ftz.f32 	%f23, %f16, %f17;
	max.ftz.f32 	%f24, %f16, %f17;
	div.full.ftz.f32 	%f25, %f23, %f24;
	mul.ftz.f32 	%f26, %f25, %f25;
	mov.f32 	%f27, 0fbf52c7ea;    	// -0.823363
	mov.f32 	%f28, 0fc0b59883;    	// -5.67487
	fma.rn.ftz.f32 	%f29, %f26, %f27, %f28;
	mov.f32 	%f30, 0fc0d21907;    	// -6.56556
	fma.rn.ftz.f32 	%f31, %f29, %f26, %f30;
	mul.ftz.f32 	%f32, %f26, %f31;
	mul.ftz.f32 	%f33, %f25, %f32;
	.loc	23	1327	0
	mov.f32 	%f34, 0f41355dc0;    	// 11.3354
	add.ftz.f32 	%f35, %f26, %f34;
	mov.f32 	%f36, 0f41e6bd60;    	// 28.8425
	fma.rn.ftz.f32 	%f37, %f35, %f26, %f36;
	mov.f32 	%f38, 0f419d92c8;    	// 19.6967
	fma.rn.ftz.f32 	%f39, %f37, %f26, %f38;
	rcp.approx.ftz.f32 	%f40, %f39;
	.loc	23	2012	0
	setp.lt.ftz.f32 	%p5, %f16, %f17;
	fma.rn.ftz.f32 	%f41, %f33, %f40, %f25;
	mov.f32 	%f42, 0f3fc90fdb;    	// 1.5708
	sub.ftz.f32 	%f43, %f42, %f41;
	selp.f32 	%f44, %f43, %f41, %p5;
	mov.f32 	%f45, 0f40490fdb;    	// 3.14159
	sub.ftz.f32 	%f46, %f45, %f44;
	mov.f32 	%f47, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p6, %f12, %f47;
	selp.f32 	%f48, %f46, %f44, %p6;
	mov.b32 	%r27, %f48;
	or.b32 	%r28, %r2, %r27;
	mov.b32 	%f49, %r28;
	add.ftz.f32 	%f50, %f12, %f15;
	mov.f32 	%f51, 0f7f800000;    	// 1.#INF
	setp.le.ftz.f32 	%p7, %f50, %f51;
	selp.f32 	%f20, %f49, %f50, %p7;
$Lt_0_59650:
$Lt_0_59138:
	.loc	21	53	0
	ld.s32 	%r29, [%rd2+60];
	ld.s8 	%r30, [%rd2+64];
	mov.u32 	%r31, 0;
	setp.eq.s32 	%p8, %r30, %r31;
	@%p8 bra 	$Lt_0_60418;
	mov.f32 	%f52, 0f3f800000;    	// 1
	bra.uni 	$Lt_0_60162;
$Lt_0_60418:
	ld.f32 	%f53, [%rd2+4];
	ld.f32 	%f54, [%rd2+0];
	sub.ftz.f32 	%f55, %f53, %f54;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, 0f3f800000;    	// 1
	setp.gt.ftz.f32 	%p9, %f55, %f57;
	@!%p9 bra 	$Lt_0_60930;
	cvt.rzi.ftz.s32.f32 	%r32, %f55;
	cvt.rn.f32.s32 	%f58, %r32;
	sub.ftz.f32 	%f56, %f55, %f58;
	bra.uni 	$Lt_0_61186;
$Lt_0_60930:
	mov.f32 	%f59, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p10, %f55, %f59;
	@!%p10 bra 	$Lt_0_61186;
	cvt.rzi.ftz.s32.f32 	%r33, %f55;
	cvt.rn.f32.s32 	%f60, %r33;
	sub.ftz.f32 	%f61, %f55, %f60;
	mov.f32 	%f62, 0f3f800000;    	// 1
	add.ftz.f32 	%f56, %f61, %f62;
$Lt_0_61186:
$Lt_0_60674:
	ld.f32 	%f63, [%rd2+12];
	ld.f32 	%f64, [%rd2+8];
	add.ftz.f32 	%f65, %f64, %f63;
	mov.f32 	%f66, %f65;
	mov.f32 	%f67, 0f3f800000;    	// 1
	setp.gt.ftz.f32 	%p11, %f65, %f67;
	@!%p11 bra 	$Lt_0_61954;
	cvt.rzi.ftz.s32.f32 	%r34, %f65;
	cvt.rn.f32.s32 	%f68, %r34;
	sub.ftz.f32 	%f66, %f65, %f68;
	bra.uni 	$Lt_0_62210;
$Lt_0_61954:
	mov.f32 	%f69, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p12, %f65, %f69;
	@!%p12 bra 	$Lt_0_62210;
	cvt.rzi.ftz.s32.f32 	%r35, %f65;
	cvt.rn.f32.s32 	%f70, %r35;
	sub.ftz.f32 	%f71, %f65, %f70;
	mov.f32 	%f72, 0f3f800000;    	// 1
	add.ftz.f32 	%f66, %f71, %f72;
$Lt_0_62210:
$Lt_0_61698:
	setp.ge.ftz.f32 	%p13, %f63, %f53;
	@!%p13 bra 	$Lt_0_72962;
	sub.ftz.f32 	%f73, %f63, %f53;
	mov.f32 	%f74, 0f358637bd;    	// 1e-006
	setp.lt.ftz.f32 	%p14, %f73, %f74;
	@!%p14 bra 	$Lt_0_72962;
	mov.f32 	%f75, 0f00000000;    	// 0
	bra.uni 	$L_0_55298;
$Lt_0_72962:
$L_0_54786:
	setp.lt.ftz.f32 	%p15, %f63, %f53;
	@!%p15 bra 	$Lt_0_73474;
	sub.ftz.f32 	%f76, %f53, %f63;
	mov.f32 	%f77, 0f358637bd;    	// 1e-006
	setp.lt.ftz.f32 	%p16, %f76, %f77;
	@!%p16 bra 	$Lt_0_73474;
	mov.f32 	%f75, 0f3f800000;    	// 1
	bra.uni 	$L_0_55298;
$Lt_0_73474:
$L_0_55554:
	sub.ftz.f32 	%f78, %f63, %f53;
	mov.f32 	%f79, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p17, %f20, %f79;
	mov.f32 	%f80, 0f40c90fdb;    	// 6.28319
	add.ftz.f32 	%f81, %f20, %f80;
	selp.f32 	%f82, %f81, %f20, %p17;
	mov.f32 	%f83, 0f3e22f983;    	// 0.159155
	mul.ftz.f32 	%f84, %f82, %f83;
	cvt.ftz.sat.f32.f32 	%f85, %f84;
	sub.ftz.f32 	%f86, %f85, %f53;
	mov.f32 	%f87, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p18, %f86, %f87;
	mov.f32 	%f88, 0f3f800000;    	// 1
	add.ftz.f32 	%f89, %f86, %f88;
	selp.f32 	%f90, %f89, %f86, %p18;
	mov.f32 	%f91, 0f3f800000;    	// 1
	mov.f32 	%f92, 0f00000000;    	// 0
	mov.f32 	%f93, 0f3f800000;    	// 1
	add.ftz.f32 	%f94, %f78, %f93;
	mov.f32 	%f95, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p19, %f78, %f95;
	selp.f32 	%f96, %f94, %f78, %p19;
	set.ge.ftz.u32.f32 	%r36, %f96, %f90;
	neg.s32 	%r37, %r36;
	mov.f32 	%f97, 0f00000000;    	// 0
	set.ge.ftz.u32.f32 	%r38, %f90, %f97;
	neg.s32 	%r39, %r38;
	and.b32 	%r40, %r37, %r39;
	neg.s32 	%r41, %r40;
	slct.f32.s32 	%f75, %f92, %f91, %r41;
$L_0_55298:
$L_0_54530:
	mov.f32 	%f98, 0f3f800000;    	// 1
	setp.lt.ftz.f32 	%p20, %f75, %f98;
	@!%p20 bra 	$Lt_0_62978;
	mov.f32 	%f99, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p21, %f20, %f99;
	mov.f32 	%f100, 0f40c90fdb;   	// 6.28319
	add.ftz.f32 	%f101, %f20, %f100;
	sub.ftz.f32 	%f102, %f53, %f56;
	selp.f32 	%f103, %f101, %f20, %p21;
	mov.f32 	%f104, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p22, %f102, %f104;
	mov.f32 	%f105, 0f3f800000;   	// 1
	add.ftz.f32 	%f106, %f102, %f105;
	mov.f32 	%f107, 0f3e22f983;   	// 0.159155
	mul.ftz.f32 	%f108, %f103, %f107;
	selp.f32 	%f109, %f106, %f102, %p22;
	cvt.ftz.sat.f32.f32 	%f85, %f108;
	sub.ftz.f32 	%f110, %f85, %f56;
	mov.f32 	%f111, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p23, %f110, %f111;
	mov.f32 	%f112, 0f3f800000;   	// 1
	add.ftz.f32 	%f113, %f110, %f112;
	selp.f32 	%f114, %f113, %f110, %p23;
	set.le.ftz.u32.f32 	%r42, %f109, %f114;
	neg.s32 	%r43, %r42;
	mov.f32 	%f115, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r44, %f114, %f115;
	neg.s32 	%r45, %r44;
	or.b32 	%r46, %r43, %r45;
	mov.u32 	%r47, 0;
	setp.eq.s32 	%p24, %r46, %r47;
	@%p24 bra 	$Lt_0_63490;
	mov.f32 	%f116, 0f00000000;   	// 0
	bra.uni 	$Lt_0_63234;
$Lt_0_63490:
	div.approx.ftz.f32 	%f116, %f114, %f109;
$Lt_0_63234:
	mov.f32 	%f117, %f116;
	mov.f32 	%f118, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p25, %f116, %f118;
	@!%p25 bra 	$Lt_0_64002;
	sub.ftz.f32 	%f119, %f66, %f63;
	mov.f32 	%f120, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p26, %f119, %f120;
	mov.f32 	%f121, 0f3f800000;   	// 1
	add.ftz.f32 	%f122, %f119, %f121;
	selp.f32 	%f123, %f122, %f119, %p26;
	sub.ftz.f32 	%f124, %f85, %f63;
	mov.f32 	%f125, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p27, %f124, %f125;
	mov.f32 	%f126, 0f3f800000;   	// 1
	add.ftz.f32 	%f127, %f124, %f126;
	selp.f32 	%f128, %f127, %f124, %p27;
	set.le.ftz.u32.f32 	%r48, %f123, %f128;
	neg.s32 	%r49, %r48;
	mov.f32 	%f129, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r50, %f128, %f129;
	neg.s32 	%r51, %r50;
	or.b32 	%r52, %r49, %r51;
	mov.u32 	%r53, 0;
	setp.eq.s32 	%p28, %r52, %r53;
	@%p28 bra 	$Lt_0_64514;
	mov.f32 	%f130, 0f00000000;   	// 0
	bra.uni 	$Lt_0_64258;
$Lt_0_64514:
	mov.f32 	%f131, 0f3f800000;   	// 1
	div.approx.ftz.f32 	%f132, %f128, %f123;
	sub.ftz.f32 	%f130, %f131, %f132;
$Lt_0_64258:
	mov.f32 	%f133, %f130;
	bra.uni 	$Lt_0_62722;
$Lt_0_64002:
	mov.f32 	%f133, 0f00000000;   	// 0
	bra.uni 	$Lt_0_62722;
$Lt_0_62978:
	mov.f32 	%f133, 0f00000000;   	// 0
	mov.f32 	%f117, 0f00000000;   	// 0
$Lt_0_62722:
	max.ftz.f32 	%f134, %f133, %f117;
	max.ftz.f32 	%f135, %f134, %f75;
	cvt.ftz.sat.f32.f32 	%f136, %f135;
	mov.f32 	%f137, 0f3f800000;   	// 1
	sub.ftz.f32 	%f138, %f137, %f136;
	mov.s32 	%r54, 1;
	setp.eq.s32 	%p29, %r29, %r54;
	selp.f32 	%f139, %f138, %f136, %p29;
	cvt.ftz.sat.f32.f32 	%f52, %f139;
$Lt_0_60162:
	mov.f32 	%f140, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p30, %f52, %f140;
	@!%p30 bra 	$Lt_0_65026;
	ld.f32 	%f141, [%rd2+20];
	ld.f32 	%f142, [%rd2+16];
	sub.ftz.f32 	%f143, %f141, %f142;
	ld.f32 	%f144, [%rd2+28];
	ld.f32 	%f145, [%rd2+24];
	add.ftz.f32 	%f146, %f145, %f144;
	setp.ge.ftz.f32 	%p31, %f144, %f141;
	@!%p31 bra 	$Lt_0_73986;
	sub.ftz.f32 	%f147, %f144, %f141;
	mov.f32 	%f148, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p32, %f147, %f148;
	@!%p32 bra 	$Lt_0_73986;
	mov.f32 	%f149, 0f00000000;   	// 0
	bra.uni 	$L_0_56834;
$Lt_0_73986:
$L_0_56322:
	setp.lt.ftz.f32 	%p33, %f144, %f141;
	@!%p33 bra 	$Lt_0_74498;
	sub.ftz.f32 	%f150, %f141, %f144;
	mov.f32 	%f151, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p34, %f150, %f151;
	@!%p34 bra 	$Lt_0_74498;
	mov.f32 	%f149, 0f3f800000;   	// 1
	bra.uni 	$L_0_56834;
$Lt_0_74498:
$L_0_57090:
	sub.ftz.f32 	%f152, %f144, %f141;
	mul.ftz.f32 	%f153, %f4, %f4;
	fma.rn.ftz.f32 	%f154, %f2, %f2, %f153;
	sqrt.approx.ftz.f32 	%f155, %f154;
	mov.f32 	%f156, 0f3f3504f3;   	// 0.707107
	div.approx.ftz.f32 	%f157, %f155, %f156;
	cvt.ftz.sat.f32.f32 	%f158, %f157;
	sub.ftz.f32 	%f159, %f158, %f141;
	mov.f32 	%f160, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p35, %f159, %f160;
	mov.f32 	%f161, 0f3f800000;   	// 1
	add.ftz.f32 	%f162, %f159, %f161;
	selp.f32 	%f163, %f162, %f159, %p35;
	mov.f32 	%f164, 0f3f800000;   	// 1
	mov.f32 	%f165, 0f00000000;   	// 0
	mov.f32 	%f166, 0f3f800000;   	// 1
	add.ftz.f32 	%f167, %f152, %f166;
	mov.f32 	%f168, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p36, %f152, %f168;
	selp.f32 	%f169, %f167, %f152, %p36;
	set.ge.ftz.u32.f32 	%r55, %f169, %f163;
	neg.s32 	%r56, %r55;
	mov.f32 	%f170, 0f00000000;   	// 0
	set.ge.ftz.u32.f32 	%r57, %f163, %f170;
	neg.s32 	%r58, %r57;
	and.b32 	%r59, %r56, %r58;
	neg.s32 	%r60, %r59;
	slct.f32.s32 	%f149, %f165, %f164, %r60;
$L_0_56834:
$L_0_56066:
	mov.f32 	%f171, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p37, %f149, %f171;
	@!%p37 bra 	$Lt_0_65538;
	mul.ftz.f32 	%f172, %f4, %f4;
	fma.rn.ftz.f32 	%f173, %f2, %f2, %f172;
	sqrt.approx.ftz.f32 	%f174, %f173;
	mov.f32 	%f175, 0f3f3504f3;   	// 0.707107
	div.approx.ftz.f32 	%f176, %f174, %f175;
	cvt.ftz.sat.f32.f32 	%f158, %f176;
	sub.ftz.f32 	%f177, %f158, %f143;
	mov.f32 	%f178, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p38, %f177, %f178;
	mov.f32 	%f179, 0f3f800000;   	// 1
	add.ftz.f32 	%f180, %f177, %f179;
	selp.f32 	%f181, %f180, %f177, %p38;
	neg.ftz.f32 	%f182, %f143;
	setp.lt.ftz.f32 	%p39, %f181, %f182;
	@!%p39 bra 	$Lt_0_66050;
	mov.f32 	%f183, 0f00000000;   	// 0
	bra.uni 	$Lt_0_66306;
$Lt_0_66050:
	sub.ftz.f32 	%f184, %f141, %f143;
	mov.f32 	%f185, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p40, %f184, %f185;
	mov.f32 	%f186, 0f3f800000;   	// 1
	add.ftz.f32 	%f187, %f184, %f186;
	selp.f32 	%f188, %f187, %f184, %p40;
	set.le.ftz.u32.f32 	%r61, %f188, %f181;
	neg.s32 	%r62, %r61;
	mov.f32 	%f189, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r63, %f181, %f189;
	neg.s32 	%r64, %r63;
	or.b32 	%r65, %r62, %r64;
	mov.u32 	%r66, 0;
	setp.eq.s32 	%p41, %r65, %r66;
	@%p41 bra 	$Lt_0_66562;
	mov.f32 	%f183, 0f00000000;   	// 0
	bra.uni 	$Lt_0_66306;
$Lt_0_66562:
	.loc	25	544	0
	div.approx.ftz.f32 	%f190, %f181, %f188;
	.loc	21	53	0
	mov.f32 	%f183, %f190;
$Lt_0_66306:
$Lt_0_65794:
	mov.f32 	%f191, %f183;
	mov.f32 	%f192, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p42, %f183, %f192;
	@!%p42 bra 	$Lt_0_67074;
	sub.ftz.f32 	%f193, %f158, %f144;
	mov.f32 	%f194, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p43, %f193, %f194;
	mov.f32 	%f195, 0f3f800000;   	// 1
	add.ftz.f32 	%f196, %f193, %f195;
	selp.f32 	%f197, %f196, %f193, %p43;
	mov.f32 	%f198, 0f3f800000;   	// 1
	sub.ftz.f32 	%f199, %f198, %f144;
	setp.gt.ftz.f32 	%p44, %f197, %f199;
	@!%p44 bra 	$Lt_0_67586;
	mov.f32 	%f200, 0f00000000;   	// 0
	bra.uni 	$Lt_0_67842;
$Lt_0_67586:
	sub.ftz.f32 	%f201, %f146, %f144;
	mov.f32 	%f202, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p45, %f201, %f202;
	mov.f32 	%f203, 0f3f800000;   	// 1
	add.ftz.f32 	%f204, %f201, %f203;
	selp.f32 	%f205, %f204, %f201, %p45;
	set.le.ftz.u32.f32 	%r67, %f205, %f197;
	neg.s32 	%r68, %r67;
	mov.f32 	%f206, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r69, %f197, %f206;
	neg.s32 	%r70, %r69;
	or.b32 	%r71, %r68, %r70;
	mov.u32 	%r72, 0;
	setp.eq.s32 	%p46, %r71, %r72;
	@%p46 bra 	$Lt_0_68098;
	mov.f32 	%f200, 0f00000000;   	// 0
	bra.uni 	$Lt_0_67842;
$Lt_0_68098:
	.loc	25	544	0
	div.approx.ftz.f32 	%f207, %f197, %f205;
	.loc	21	53	0
	mov.f32 	%f208, 0f3f800000;   	// 1
	sub.ftz.f32 	%f200, %f208, %f207;
$Lt_0_67842:
$Lt_0_67330:
	mov.f32 	%f209, %f200;
	bra.uni 	$Lt_0_65282;
$Lt_0_67074:
	mov.f32 	%f209, 0f00000000;   	// 0
	bra.uni 	$Lt_0_65282;
$Lt_0_65538:
	mov.f32 	%f209, 0f00000000;   	// 0
	mov.f32 	%f191, 0f00000000;   	// 0
$Lt_0_65282:
	max.ftz.f32 	%f210, %f209, %f191;
	mov.s32 	%r73, 1;
	setp.eq.s32 	%p47, %r29, %r73;
	max.ftz.f32 	%f211, %f210, %f149;
	cvt.ftz.sat.f32.f32 	%f212, %f211;
	mov.f32 	%f213, 0f3f800000;   	// 1
	sub.ftz.f32 	%f214, %f213, %f212;
	selp.f32 	%f215, %f214, %f212, %p47;
	cvt.ftz.sat.f32.f32 	%f216, %f215;
	mov.f32 	%f217, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p48, %f216, %f217;
	@!%p48 bra 	$Lt_0_68610;
	ld.f32 	%f218, [%rd2+36];
	ld.f32 	%f219, [%rd2+32];
	sub.ftz.f32 	%f220, %f218, %f219;
	ld.f32 	%f221, [%rd2+44];
	ld.f32 	%f222, [%rd2+40];
	add.ftz.f32 	%f223, %f222, %f221;
	setp.ge.ftz.f32 	%p49, %f221, %f218;
	@!%p49 bra 	$Lt_0_75010;
	sub.ftz.f32 	%f224, %f221, %f218;
	mov.f32 	%f225, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p50, %f224, %f225;
	@!%p50 bra 	$Lt_0_75010;
	mov.f32 	%f226, 0f00000000;   	// 0
	bra.uni 	$L_0_58370;
$Lt_0_75010:
$L_0_57858:
	setp.lt.ftz.f32 	%p51, %f221, %f218;
	@!%p51 bra 	$Lt_0_75522;
	sub.ftz.f32 	%f227, %f218, %f221;
	mov.f32 	%f228, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p52, %f227, %f228;
	@!%p52 bra 	$Lt_0_75522;
	mov.f32 	%f226, 0f3f800000;   	// 1
	bra.uni 	$L_0_58370;
$Lt_0_75522:
$L_0_58626:
	sub.ftz.f32 	%f229, %f221, %f218;
	cvt.ftz.sat.f32.f32 	%f230, %f6;
	sub.ftz.f32 	%f231, %f230, %f218;
	mov.f32 	%f232, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p53, %f231, %f232;
	mov.f32 	%f233, 0f3f800000;   	// 1
	add.ftz.f32 	%f234, %f231, %f233;
	selp.f32 	%f235, %f234, %f231, %p53;
	mov.f32 	%f236, 0f3f800000;   	// 1
	mov.f32 	%f237, 0f00000000;   	// 0
	mov.f32 	%f238, 0f3f800000;   	// 1
	add.ftz.f32 	%f239, %f229, %f238;
	mov.f32 	%f240, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p54, %f229, %f240;
	selp.f32 	%f241, %f239, %f229, %p54;
	set.ge.ftz.u32.f32 	%r74, %f241, %f235;
	neg.s32 	%r75, %r74;
	mov.f32 	%f242, 0f00000000;   	// 0
	set.ge.ftz.u32.f32 	%r76, %f235, %f242;
	neg.s32 	%r77, %r76;
	and.b32 	%r78, %r75, %r77;
	neg.s32 	%r79, %r78;
	slct.f32.s32 	%f226, %f237, %f236, %r79;
$L_0_58370:
$L_0_57602:
	mov.f32 	%f243, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p55, %f226, %f243;
	@!%p55 bra 	$Lt_0_69122;
	cvt.ftz.sat.f32.f32 	%f230, %f6;
	sub.ftz.f32 	%f244, %f230, %f220;
	mov.f32 	%f245, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p56, %f244, %f245;
	mov.f32 	%f246, 0f3f800000;   	// 1
	add.ftz.f32 	%f247, %f244, %f246;
	selp.f32 	%f248, %f247, %f244, %p56;
	neg.ftz.f32 	%f249, %f220;
	setp.lt.ftz.f32 	%p57, %f248, %f249;
	@!%p57 bra 	$Lt_0_69634;
	mov.f32 	%f250, 0f00000000;   	// 0
	bra.uni 	$Lt_0_69890;
$Lt_0_69634:
	sub.ftz.f32 	%f251, %f218, %f220;
	mov.f32 	%f252, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p58, %f251, %f252;
	mov.f32 	%f253, 0f3f800000;   	// 1
	add.ftz.f32 	%f254, %f251, %f253;
	selp.f32 	%f255, %f254, %f251, %p58;
	set.le.ftz.u32.f32 	%r80, %f255, %f248;
	neg.s32 	%r81, %r80;
	mov.f32 	%f256, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r82, %f248, %f256;
	neg.s32 	%r83, %r82;
	or.b32 	%r84, %r81, %r83;
	mov.u32 	%r85, 0;
	setp.eq.s32 	%p59, %r84, %r85;
	@%p59 bra 	$Lt_0_70146;
	mov.f32 	%f250, 0f00000000;   	// 0
	bra.uni 	$Lt_0_69890;
$Lt_0_70146:
	div.approx.ftz.f32 	%f250, %f248, %f255;
$Lt_0_69890:
$Lt_0_69378:
	mov.f32 	%f257, %f250;
	mov.f32 	%f258, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p60, %f250, %f258;
	@!%p60 bra 	$Lt_0_70658;
	sub.ftz.f32 	%f259, %f230, %f221;
	mov.f32 	%f260, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p61, %f259, %f260;
	mov.f32 	%f261, 0f3f800000;   	// 1
	add.ftz.f32 	%f262, %f259, %f261;
	selp.f32 	%f263, %f262, %f259, %p61;
	mov.f32 	%f264, 0f3f800000;   	// 1
	sub.ftz.f32 	%f265, %f264, %f221;
	setp.gt.ftz.f32 	%p62, %f263, %f265;
	@!%p62 bra 	$Lt_0_71170;
	mov.f32 	%f266, 0f00000000;   	// 0
	bra.uni 	$Lt_0_71426;
$Lt_0_71170:
	sub.ftz.f32 	%f267, %f223, %f221;
	mov.f32 	%f268, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p63, %f267, %f268;
	mov.f32 	%f269, 0f3f800000;   	// 1
	add.ftz.f32 	%f270, %f267, %f269;
	selp.f32 	%f271, %f270, %f267, %p63;
	set.le.ftz.u32.f32 	%r86, %f271, %f263;
	neg.s32 	%r87, %r86;
	mov.f32 	%f272, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r88, %f263, %f272;
	neg.s32 	%r89, %r88;
	or.b32 	%r90, %r87, %r89;
	mov.u32 	%r91, 0;
	setp.eq.s32 	%p64, %r90, %r91;
	@%p64 bra 	$Lt_0_71682;
	mov.f32 	%f266, 0f00000000;   	// 0
	bra.uni 	$Lt_0_71426;
$Lt_0_71682:
	mov.f32 	%f273, 0f3f800000;   	// 1
	div.approx.ftz.f32 	%f274, %f263, %f271;
	sub.ftz.f32 	%f266, %f273, %f274;
$Lt_0_71426:
$Lt_0_70914:
	mov.f32 	%f275, %f266;
	bra.uni 	$Lt_0_68866;
$Lt_0_70658:
	mov.f32 	%f275, 0f00000000;   	// 0
	bra.uni 	$Lt_0_68866;
$Lt_0_69122:
	mov.f32 	%f275, 0f00000000;   	// 0
	mov.f32 	%f257, 0f00000000;   	// 0
$Lt_0_68866:
	max.ftz.f32 	%f276, %f275, %f257;
	max.ftz.f32 	%f277, %f276, %f226;
	cvt.ftz.sat.f32.f32 	%f278, %f277;
	mov.f32 	%f279, 0f3f800000;   	// 1
	sub.ftz.f32 	%f280, %f279, %f278;
	selp.f32 	%f281, %f280, %f278, %p47;
	cvt.ftz.sat.f32.f32 	%f282, %f281;
	mul.ftz.f32 	%f283, %f216, %f52;
	mul.ftz.f32 	%f284, %f282, %f283;
	mov.f32 	%f285, 0f00000000;   	// 0
	mov.f32 	%f286, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p65, %f282, %f286;
	selp.f32 	%f287, %f284, %f285, %p65;
	bra.uni 	$Lt_0_64770;
$Lt_0_68610:
	mov.f32 	%f287, 0f00000000;   	// 0
	bra.uni 	$Lt_0_64770;
$Lt_0_65026:
	mov.f32 	%f287, 0f00000000;   	// 0
$Lt_0_64770:
	ld.f32 	%f288, [%rd2+56];
	mov.f32 	%f289, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p66, %f288, %f289;
	@!%p66 bra 	$Lt_0_71938;
	mov.f32 	%f290, 0f00000000;   	// 0
	setp.ge.ftz.f32 	%p67, %f287, %f290;
	@!%p67 bra 	$Lt_0_72706;
	lg2.approx.ftz.f32 	%f291, %f287;
	mov.f32 	%f292, 0f41200000;   	// 10
	lg2.approx.ftz.f32 	%f293, %f292;
	mul.ftz.f32 	%f294, %f288, %f293;
	ex2.approx.ftz.f32 	%f295, %f294;
	rcp.approx.ftz.f32 	%f296, %f295;
	mul.ftz.f32 	%f297, %f291, %f296;
	ex2.approx.ftz.f32 	%f298, %f297;
	bra.uni 	$Lt_0_72450;
$Lt_0_72706:
	neg.ftz.f32 	%f299, %f287;
	lg2.approx.ftz.f32 	%f300, %f299;
	mov.f32 	%f301, 0f41200000;   	// 10
	lg2.approx.ftz.f32 	%f302, %f301;
	mul.ftz.f32 	%f303, %f288, %f302;
	ex2.approx.ftz.f32 	%f304, %f303;
	rcp.approx.ftz.f32 	%f305, %f304;
	mul.ftz.f32 	%f306, %f300, %f305;
	ex2.approx.ftz.f32 	%f307, %f306;
	neg.ftz.f32 	%f298, %f307;
$Lt_0_72450:
	mov.f32 	%f287, %f298;
$Lt_0_71938:
	cvt.ftz.sat.f32.f32 	%f287, %f287;
	mov.f32 	%f308, 0f3f800000;   	// 1
	sub.ftz.f32 	%f309, %f308, %f287;
	mov.s32 	%r92, 2;
	setp.eq.s32 	%p68, %r29, %r92;
	selp.f32 	%f310, %f309, %f287, %p68;
	st.param.f32 	[__cudaretf__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters], %f310;
	ret;
$LDWend__Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters:
	} // _Z15CalculateWeight8PixelYUVPK33SecondaryColorCorrectorParameters
	.global .align 8 .b8 inSecondaryParameters[68];

	.entry SecondaryColorCorrection (
		.param .u64 __cudaparm_SecondaryColorCorrection_inImage,
		.param .s32 __cudaparm_SecondaryColorCorrection_inPitch,
		.param .u64 __cudaparm_SecondaryColorCorrection_inSecondaryMask,
		.param .s32 __cudaparm_SecondaryColorCorrection_inSecondaryPitch,
		.param .u32 __cudaparm_SecondaryColorCorrection_inDeviceFormat,
		.param .s32 __cudaparm_SecondaryColorCorrection_inWidth,
		.param .s32 __cudaparm_SecondaryColorCorrection_inHeight,
		.param .u64 __cudaparm_SecondaryColorCorrection_ConstantinSecondaryParameters)
	{
	.reg .u32 %r<123>;
	.reg .u64 %rd<12>;
	.reg .f32 %f<327>;
	.reg .pred %p<72>;
$LDWbegin_SecondaryColorCorrection:
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mul.lo.u32 	%r3, %r1, %r2;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	mul.lo.u32 	%r6, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	add.u32 	%r8, %r7, %r3;
	mov.u32 	%r9, %tid.y;
	add.u32 	%r10, %r9, %r6;
	ld.param.s32 	%r11, [__cudaparm_SecondaryColorCorrection_inWidth];
	set.gt.u32.s32 	%r12, %r11, %r8;
	neg.s32 	%r13, %r12;
	ld.param.s32 	%r14, [__cudaparm_SecondaryColorCorrection_inHeight];
	set.gt.u32.s32 	%r15, %r14, %r10;
	neg.s32 	%r16, %r15;
	and.b32 	%r17, %r13, %r16;
	mov.u32 	%r18, 0;
	setp.eq.s32 	%p1, %r17, %r18;
	@%p1 bra 	$Lt_1_60930;
	ld.param.s32 	%r19, [__cudaparm_SecondaryColorCorrection_inPitch];
	mul.lo.s32 	%r20, %r19, %r10;
	add.s32 	%r21, %r8, %r20;
	cvt.s64.s32 	%rd1, %r21;
	ld.param.u64 	%rd2, [__cudaparm_SecondaryColorCorrection_inImage];
	ld.param.u32 	%r22, [__cudaparm_SecondaryColorCorrection_inDeviceFormat];
	mov.u32 	%r23, 0;
	setp.ne.s32 	%p2, %r22, %r23;
	@%p2 bra 	$Lt_1_61698;
	mul.lo.u64 	%rd3, %rd1, 8;
	add.u64 	%rd4, %rd2, %rd3;
	ld.global.v4.u16 	{%r24,%r25,%r26,_}, [%rd4+0];
	{ .reg .b32 %b1;
	mov.b32		%b1, %r24;
	cvt.ftz.f32.f16	%f1, %b1; }
	{ .reg .b32 %b1;
	mov.b32		%b1, %r25;
	cvt.ftz.f32.f16	%f2, %b1; }
	{ .reg .b32 %b1;
	mov.b32		%b1, %r26;
	cvt.ftz.f32.f16	%f3, %b1; }
	bra.uni 	$Lt_1_61442;
$Lt_1_61698:
	mul.lo.u64 	%rd5, %rd1, 16;
	add.u64 	%rd6, %rd2, %rd5;
	ld.global.v4.f32 	{%f1,%f2,%f3,_}, [%rd6+0];
$Lt_1_61442:
	mov.f32 	%f4, 0fbed65e46;     	// -0.418688
	mul.ftz.f32 	%f5, %f2, %f4;
	mov.f32 	%f6, 0fbea99b6f;     	// -0.331264
	mul.ftz.f32 	%f7, %f2, %f6;
	mov.f32 	%f8, 0f3f000000;     	// 0.5
	fma.rn.ftz.f32 	%f9, %f8, %f3, %f5;
	mov.f32 	%f10, 0fbe2cc921;    	// -0.168736
	fma.rn.ftz.f32 	%f11, %f10, %f3, %f7;
	mov.f32 	%f12, 0fbda686e8;    	// -0.081312
	fma.rn.ftz.f32 	%f13, %f12, %f1, %f9;
	mov.f32 	%f14, 0f3f000000;    	// 0.5
	fma.rn.ftz.f32 	%f15, %f14, %f1, %f11;
	mov.f32 	%f16, 0f3f728f61;    	// 0.9475
	mul.ftz.f32 	%f17, %f13, %f16;
	mov.f32 	%f18, 0f3ea3b6e9;    	// 0.319755
	mul.ftz.f32 	%f19, %f13, %f18;
	mov.f32 	%f20, 0fbea3b6e9;    	// -0.319755
	fma.rn.ftz.f32 	%f21, %f20, %f15, %f17;
	mov.f32 	%f22, 0fbf728f61;    	// -0.9475
	mul.ftz.f32 	%f23, %f22, %f15;
	sub.ftz.f32 	%f24, %f23, %f19;
	abs.ftz.f32 	%f25, %f21;
	abs.ftz.f32 	%f26, %f24;
	mov.b32 	%r27, %f24;
	and.b32 	%r28, %r27, -2147483648;
	mov.f32 	%f27, 0f00000000;    	// 0
	set.eq.ftz.u32.f32 	%r29, %f25, %f27;
	neg.s32 	%r30, %r29;
	mov.f32 	%f28, 0f00000000;    	// 0
	set.eq.ftz.u32.f32 	%r31, %f26, %f28;
	neg.s32 	%r32, %r31;
	and.b32 	%r33, %r30, %r32;
	mov.u32 	%r34, 0;
	setp.eq.s32 	%p3, %r33, %r34;
	@%p3 bra 	$Lt_1_62210;
	.loc	23	1998	0
	mov.s32 	%r35, 1078530011;
	mov.s32 	%r36, 0;
	mov.b32 	%r37, %f21;
	mov.s32 	%r38, 0;
	setp.lt.s32 	%p4, %r37, %r38;
	selp.s32 	%r39, %r35, %r36, %p4;
	or.b32 	%r40, %r39, %r28;
	mov.b32 	%f29, %r40;
	bra.uni 	$Lt_1_62466;
$Lt_1_62210:
	mov.f32 	%f30, 0f7f800000;    	// 1.#INF
	set.eq.ftz.u32.f32 	%r41, %f25, %f30;
	neg.s32 	%r42, %r41;
	mov.f32 	%f31, 0f7f800000;    	// 1.#INF
	set.eq.ftz.u32.f32 	%r43, %f26, %f31;
	neg.s32 	%r44, %r43;
	and.b32 	%r45, %r42, %r44;
	mov.u32 	%r46, 0;
	setp.eq.s32 	%p5, %r45, %r46;
	@%p5 bra 	$Lt_1_62722;
	.loc	23	2001	0
	mov.s32 	%r47, 1075235812;
	mov.s32 	%r48, 1061752795;
	mov.b32 	%r49, %f21;
	mov.s32 	%r50, 0;
	setp.lt.s32 	%p6, %r49, %r50;
	selp.s32 	%r51, %r47, %r48, %p6;
	or.b32 	%r52, %r51, %r28;
	mov.b32 	%f29, %r52;
	bra.uni 	$Lt_1_62466;
$Lt_1_62722:
	.loc	23	1289	0
	min.ftz.f32 	%f32, %f25, %f26;
	max.ftz.f32 	%f33, %f25, %f26;
	div.full.ftz.f32 	%f34, %f32, %f33;
	mul.ftz.f32 	%f35, %f34, %f34;
	mov.f32 	%f36, 0fbf52c7ea;    	// -0.823363
	mov.f32 	%f37, 0fc0b59883;    	// -5.67487
	fma.rn.ftz.f32 	%f38, %f35, %f36, %f37;
	mov.f32 	%f39, 0fc0d21907;    	// -6.56556
	fma.rn.ftz.f32 	%f40, %f38, %f35, %f39;
	mov.f32 	%f41, 0f41355dc0;    	// 11.3354
	add.ftz.f32 	%f42, %f35, %f41;
	mov.f32 	%f43, 0f41e6bd60;    	// 28.8425
	fma.rn.ftz.f32 	%f44, %f42, %f35, %f43;
	.loc	23	1327	0
	mov.f32 	%f45, 0f419d92c8;    	// 19.6967
	fma.rn.ftz.f32 	%f46, %f44, %f35, %f45;
	rcp.approx.ftz.f32 	%f47, %f46;
	.loc	23	1289	0
	mul.ftz.f32 	%f48, %f40, %f35;
	mul.ftz.f32 	%f49, %f34, %f48;
	fma.rn.ftz.f32 	%f50, %f49, %f47, %f34;
	.loc	23	2012	0
	mov.f32 	%f51, 0f3fc90fdb;    	// 1.5708
	sub.ftz.f32 	%f52, %f51, %f50;
	setp.lt.ftz.f32 	%p7, %f25, %f26;
	selp.f32 	%f53, %f52, %f50, %p7;
	mov.f32 	%f54, 0f40490fdb;    	// 3.14159
	sub.ftz.f32 	%f55, %f54, %f53;
	mov.f32 	%f56, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p8, %f21, %f56;
	selp.f32 	%f57, %f55, %f53, %p8;
	mov.b32 	%r53, %f57;
	or.b32 	%r54, %r28, %r53;
	mov.b32 	%f58, %r54;
	add.ftz.f32 	%f59, %f21, %f24;
	mov.f32 	%f60, 0f7f800000;    	// 1.#INF
	setp.le.ftz.f32 	%p9, %f59, %f60;
	selp.f32 	%f29, %f58, %f59, %p9;
$Lt_1_62466:
$Lt_1_61954:
	.loc	21	53	0
	ld.global.s32 	%r55, [inSecondaryParameters+60];
	ld.global.s8 	%r56, [inSecondaryParameters+64];
	mov.u32 	%r57, 0;
	setp.eq.s32 	%p10, %r56, %r57;
	@%p10 bra 	$Lt_1_63234;
	mov.f32 	%f61, 0f3f800000;    	// 1
	bra.uni 	$Lt_1_62978;
$Lt_1_63234:
	ld.global.v2.f32 	{%f62,%f63}, [inSecondaryParameters+0];
	sub.ftz.f32 	%f64, %f63, %f62;
	mov.f32 	%f65, %f64;
	mov.f32 	%f66, 0f3f800000;    	// 1
	setp.gt.ftz.f32 	%p11, %f64, %f66;
	@!%p11 bra 	$Lt_1_63746;
	cvt.rzi.ftz.s32.f32 	%r58, %f64;
	cvt.rn.f32.s32 	%f67, %r58;
	sub.ftz.f32 	%f65, %f64, %f67;
	bra.uni 	$Lt_1_64002;
$Lt_1_63746:
	mov.f32 	%f68, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p12, %f64, %f68;
	@!%p12 bra 	$Lt_1_64002;
	cvt.rzi.ftz.s32.f32 	%r59, %f64;
	cvt.rn.f32.s32 	%f69, %r59;
	sub.ftz.f32 	%f70, %f64, %f69;
	mov.f32 	%f71, 0f3f800000;    	// 1
	add.ftz.f32 	%f65, %f70, %f71;
$Lt_1_64002:
$Lt_1_63490:
	ld.global.v2.f32 	{%f72,%f73}, [inSecondaryParameters+8];
	add.ftz.f32 	%f74, %f72, %f73;
	mov.f32 	%f75, %f74;
	mov.f32 	%f76, 0f3f800000;    	// 1
	setp.gt.ftz.f32 	%p13, %f74, %f76;
	@!%p13 bra 	$Lt_1_64770;
	cvt.rzi.ftz.s32.f32 	%r60, %f74;
	cvt.rn.f32.s32 	%f77, %r60;
	sub.ftz.f32 	%f75, %f74, %f77;
	bra.uni 	$Lt_1_65026;
$Lt_1_64770:
	mov.f32 	%f78, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p14, %f74, %f78;
	@!%p14 bra 	$Lt_1_65026;
	cvt.rzi.ftz.s32.f32 	%r61, %f74;
	cvt.rn.f32.s32 	%f79, %r61;
	sub.ftz.f32 	%f80, %f74, %f79;
	mov.f32 	%f81, 0f3f800000;    	// 1
	add.ftz.f32 	%f75, %f80, %f81;
$Lt_1_65026:
$Lt_1_64514:
	setp.ge.ftz.f32 	%p15, %f73, %f63;
	@!%p15 bra 	$Lt_1_75778;
	sub.ftz.f32 	%f82, %f73, %f63;
	mov.f32 	%f83, 0f358637bd;    	// 1e-006
	setp.lt.ftz.f32 	%p16, %f82, %f83;
	@!%p16 bra 	$Lt_1_75778;
	mov.f32 	%f84, 0f00000000;    	// 0
	bra.uni 	$L_1_57090;
$Lt_1_75778:
$L_1_56578:
	setp.lt.ftz.f32 	%p17, %f73, %f63;
	@!%p17 bra 	$Lt_1_76290;
	sub.ftz.f32 	%f85, %f63, %f73;
	mov.f32 	%f86, 0f358637bd;    	// 1e-006
	setp.lt.ftz.f32 	%p18, %f85, %f86;
	@!%p18 bra 	$Lt_1_76290;
	mov.f32 	%f84, 0f3f800000;    	// 1
	bra.uni 	$L_1_57090;
$Lt_1_76290:
$L_1_57346:
	sub.ftz.f32 	%f87, %f73, %f63;
	mov.f32 	%f88, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p19, %f29, %f88;
	mov.f32 	%f89, 0f40c90fdb;    	// 6.28319
	add.ftz.f32 	%f90, %f29, %f89;
	selp.f32 	%f91, %f90, %f29, %p19;
	mov.f32 	%f92, 0f3e22f983;    	// 0.159155
	mul.ftz.f32 	%f93, %f91, %f92;
	cvt.ftz.sat.f32.f32 	%f94, %f93;
	sub.ftz.f32 	%f95, %f94, %f63;
	mov.f32 	%f96, 0f00000000;    	// 0
	setp.lt.ftz.f32 	%p20, %f95, %f96;
	mov.f32 	%f97, 0f3f800000;    	// 1
	add.ftz.f32 	%f98, %f95, %f97;
	selp.f32 	%f99, %f98, %f95, %p20;
	mov.f32 	%f100, 0f3f800000;   	// 1
	mov.f32 	%f101, 0f00000000;   	// 0
	mov.f32 	%f102, 0f3f800000;   	// 1
	add.ftz.f32 	%f103, %f87, %f102;
	mov.f32 	%f104, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p21, %f87, %f104;
	selp.f32 	%f105, %f103, %f87, %p21;
	set.ge.ftz.u32.f32 	%r62, %f105, %f99;
	neg.s32 	%r63, %r62;
	mov.f32 	%f106, 0f00000000;   	// 0
	set.ge.ftz.u32.f32 	%r64, %f99, %f106;
	neg.s32 	%r65, %r64;
	and.b32 	%r66, %r63, %r65;
	neg.s32 	%r67, %r66;
	slct.f32.s32 	%f84, %f101, %f100, %r67;
$L_1_57090:
$L_1_56322:
	mov.f32 	%f107, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p22, %f84, %f107;
	@!%p22 bra 	$Lt_1_65794;
	mov.f32 	%f108, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p23, %f29, %f108;
	mov.f32 	%f109, 0f40c90fdb;   	// 6.28319
	add.ftz.f32 	%f110, %f29, %f109;
	sub.ftz.f32 	%f111, %f63, %f65;
	selp.f32 	%f112, %f110, %f29, %p23;
	mov.f32 	%f113, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p24, %f111, %f113;
	mov.f32 	%f114, 0f3f800000;   	// 1
	add.ftz.f32 	%f115, %f111, %f114;
	mov.f32 	%f116, 0f3e22f983;   	// 0.159155
	mul.ftz.f32 	%f117, %f112, %f116;
	selp.f32 	%f118, %f115, %f111, %p24;
	cvt.ftz.sat.f32.f32 	%f94, %f117;
	sub.ftz.f32 	%f119, %f94, %f65;
	mov.f32 	%f120, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p25, %f119, %f120;
	mov.f32 	%f121, 0f3f800000;   	// 1
	add.ftz.f32 	%f122, %f119, %f121;
	selp.f32 	%f123, %f122, %f119, %p25;
	set.le.ftz.u32.f32 	%r68, %f118, %f123;
	neg.s32 	%r69, %r68;
	mov.f32 	%f124, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r70, %f123, %f124;
	neg.s32 	%r71, %r70;
	or.b32 	%r72, %r69, %r71;
	mov.u32 	%r73, 0;
	setp.eq.s32 	%p26, %r72, %r73;
	@%p26 bra 	$Lt_1_66306;
	mov.f32 	%f125, 0f00000000;   	// 0
	bra.uni 	$Lt_1_66050;
$Lt_1_66306:
	div.approx.ftz.f32 	%f125, %f123, %f118;
$Lt_1_66050:
	mov.f32 	%f126, %f125;
	mov.f32 	%f127, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p27, %f125, %f127;
	@!%p27 bra 	$Lt_1_66818;
	sub.ftz.f32 	%f128, %f75, %f73;
	mov.f32 	%f129, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p28, %f128, %f129;
	mov.f32 	%f130, 0f3f800000;   	// 1
	add.ftz.f32 	%f131, %f128, %f130;
	selp.f32 	%f132, %f131, %f128, %p28;
	sub.ftz.f32 	%f133, %f94, %f73;
	mov.f32 	%f134, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p29, %f133, %f134;
	mov.f32 	%f135, 0f3f800000;   	// 1
	add.ftz.f32 	%f136, %f133, %f135;
	selp.f32 	%f137, %f136, %f133, %p29;
	set.le.ftz.u32.f32 	%r74, %f132, %f137;
	neg.s32 	%r75, %r74;
	mov.f32 	%f138, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r76, %f137, %f138;
	neg.s32 	%r77, %r76;
	or.b32 	%r78, %r75, %r77;
	mov.u32 	%r79, 0;
	setp.eq.s32 	%p30, %r78, %r79;
	@%p30 bra 	$Lt_1_67330;
	mov.f32 	%f139, 0f00000000;   	// 0
	bra.uni 	$Lt_1_67074;
$Lt_1_67330:
	mov.f32 	%f140, 0f3f800000;   	// 1
	div.approx.ftz.f32 	%f141, %f137, %f132;
	sub.ftz.f32 	%f139, %f140, %f141;
$Lt_1_67074:
	mov.f32 	%f142, %f139;
	bra.uni 	$Lt_1_65538;
$Lt_1_66818:
	mov.f32 	%f142, 0f00000000;   	// 0
	bra.uni 	$Lt_1_65538;
$Lt_1_65794:
	mov.f32 	%f142, 0f00000000;   	// 0
	mov.f32 	%f126, 0f00000000;   	// 0
$Lt_1_65538:
	max.ftz.f32 	%f143, %f142, %f126;
	max.ftz.f32 	%f144, %f143, %f84;
	cvt.ftz.sat.f32.f32 	%f145, %f144;
	mov.f32 	%f146, 0f3f800000;   	// 1
	sub.ftz.f32 	%f147, %f146, %f145;
	mov.s32 	%r80, 1;
	setp.eq.s32 	%p31, %r55, %r80;
	selp.f32 	%f148, %f147, %f145, %p31;
	cvt.ftz.sat.f32.f32 	%f61, %f148;
$Lt_1_62978:
	mov.f32 	%f149, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p32, %f61, %f149;
	@!%p32 bra 	$Lt_1_67842;
	mul.ftz.f32 	%f150, %f13, %f13;
	fma.rn.ftz.f32 	%f151, %f15, %f15, %f150;
	sqrt.approx.ftz.f32 	%f152, %f151;
	mov.f32 	%f153, 0f3f3504f3;   	// 0.707107
	div.approx.ftz.f32 	%f154, %f152, %f153;
	cvt.ftz.sat.f32.f32 	%f155, %f154;
	ld.global.f32 	%f156, [inSecondaryParameters+20];
	sub.ftz.f32 	%f157, %f155, %f156;
	mov.f32 	%f158, 0f3f800000;   	// 1
	add.ftz.f32 	%f159, %f157, %f158;
	mov.f32 	%f160, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p33, %f157, %f160;
	selp.f32 	%f161, %f159, %f157, %p33;
	ld.global.f32 	%f162, [inSecondaryParameters+28];
	setp.ge.ftz.f32 	%p34, %f162, %f156;
	@!%p34 bra 	$Lt_1_76802;
	sub.ftz.f32 	%f163, %f162, %f156;
	mov.f32 	%f164, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p35, %f163, %f164;
	@!%p35 bra 	$Lt_1_76802;
	mov.f32 	%f165, 0f00000000;   	// 0
	bra.uni 	$L_1_58626;
$Lt_1_76802:
$L_1_58114:
	setp.lt.ftz.f32 	%p36, %f162, %f156;
	@!%p36 bra 	$Lt_1_77314;
	sub.ftz.f32 	%f166, %f156, %f162;
	mov.f32 	%f167, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p37, %f166, %f167;
	@!%p37 bra 	$Lt_1_77314;
	mov.f32 	%f165, 0f3f800000;   	// 1
	bra.uni 	$L_1_58626;
$Lt_1_77314:
$L_1_58882:
	sub.ftz.f32 	%f168, %f162, %f156;
	mov.f32 	%f169, 0f3f800000;   	// 1
	mov.f32 	%f170, 0f00000000;   	// 0
	mov.f32 	%f171, 0f3f800000;   	// 1
	add.ftz.f32 	%f172, %f168, %f171;
	mov.f32 	%f173, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p38, %f168, %f173;
	selp.f32 	%f174, %f172, %f168, %p38;
	set.ge.ftz.u32.f32 	%r81, %f174, %f161;
	neg.s32 	%r82, %r81;
	mov.f32 	%f175, 0f00000000;   	// 0
	set.ge.ftz.u32.f32 	%r83, %f161, %f175;
	neg.s32 	%r84, %r83;
	and.b32 	%r85, %r82, %r84;
	neg.s32 	%r86, %r85;
	slct.f32.s32 	%f165, %f170, %f169, %r86;
$L_1_58626:
$L_1_57858:
	mov.f32 	%f176, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p39, %f165, %f176;
	@!%p39 bra 	$Lt_1_68354;
	ld.global.f32 	%f177, [inSecondaryParameters+16];
	sub.ftz.f32 	%f178, %f156, %f177;
	sub.ftz.f32 	%f179, %f155, %f178;
	mov.f32 	%f180, 0f3f800000;   	// 1
	add.ftz.f32 	%f181, %f179, %f180;
	mov.f32 	%f182, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p40, %f179, %f182;
	selp.f32 	%f183, %f181, %f179, %p40;
	sub.ftz.f32 	%f184, %f177, %f156;
	setp.lt.ftz.f32 	%p41, %f183, %f184;
	@!%p41 bra 	$Lt_1_68866;
	mov.f32 	%f185, 0f00000000;   	// 0
	bra.uni 	$Lt_1_69122;
$Lt_1_68866:
	sub.ftz.f32 	%f186, %f156, %f178;
	mov.f32 	%f187, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p42, %f186, %f187;
	mov.f32 	%f188, 0f3f800000;   	// 1
	add.ftz.f32 	%f189, %f186, %f188;
	selp.f32 	%f190, %f189, %f186, %p42;
	set.ge.ftz.u32.f32 	%r87, %f183, %f190;
	neg.s32 	%r88, %r87;
	mov.f32 	%f191, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r89, %f183, %f191;
	neg.s32 	%r90, %r89;
	or.b32 	%r91, %r88, %r90;
	mov.u32 	%r92, 0;
	setp.eq.s32 	%p43, %r91, %r92;
	@%p43 bra 	$Lt_1_69378;
	mov.f32 	%f185, 0f00000000;   	// 0
	bra.uni 	$Lt_1_69122;
$Lt_1_69378:
	div.approx.ftz.f32 	%f185, %f183, %f190;
$Lt_1_69122:
$Lt_1_68610:
	mov.f32 	%f192, %f185;
	mov.f32 	%f193, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p44, %f185, %f193;
	@!%p44 bra 	$Lt_1_69890;
	sub.ftz.f32 	%f194, %f155, %f162;
	mov.f32 	%f195, 0f3f800000;   	// 1
	add.ftz.f32 	%f196, %f194, %f195;
	mov.f32 	%f197, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p45, %f194, %f197;
	selp.f32 	%f198, %f196, %f194, %p45;
	mov.f32 	%f199, 0f3f800000;   	// 1
	sub.ftz.f32 	%f200, %f199, %f162;
	setp.gt.ftz.f32 	%p46, %f198, %f200;
	@!%p46 bra 	$Lt_1_70402;
	mov.f32 	%f201, 0f00000000;   	// 0
	bra.uni 	$Lt_1_70658;
$Lt_1_70402:
	ld.global.f32 	%f202, [inSecondaryParameters+24];
	add.ftz.f32 	%f203, %f202, %f162;
	sub.ftz.f32 	%f204, %f203, %f162;
	mov.f32 	%f205, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p47, %f204, %f205;
	mov.f32 	%f206, 0f3f800000;   	// 1
	add.ftz.f32 	%f207, %f204, %f206;
	selp.f32 	%f208, %f207, %f204, %p47;
	set.ge.ftz.u32.f32 	%r93, %f198, %f208;
	neg.s32 	%r94, %r93;
	mov.f32 	%f209, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r95, %f198, %f209;
	neg.s32 	%r96, %r95;
	or.b32 	%r97, %r94, %r96;
	mov.u32 	%r98, 0;
	setp.eq.s32 	%p48, %r97, %r98;
	@%p48 bra 	$Lt_1_70914;
	mov.f32 	%f201, 0f00000000;   	// 0
	bra.uni 	$Lt_1_70658;
$Lt_1_70914:
	mov.f32 	%f210, 0f3f800000;   	// 1
	div.approx.ftz.f32 	%f211, %f198, %f208;
	sub.ftz.f32 	%f201, %f210, %f211;
$Lt_1_70658:
$Lt_1_70146:
	mov.f32 	%f212, %f201;
	bra.uni 	$Lt_1_68098;
$Lt_1_69890:
	mov.f32 	%f212, 0f00000000;   	// 0
	bra.uni 	$Lt_1_68098;
$Lt_1_68354:
	mov.f32 	%f212, 0f00000000;   	// 0
	mov.f32 	%f192, 0f00000000;   	// 0
$Lt_1_68098:
	mov.s32 	%r99, 1;
	setp.eq.s32 	%p49, %r55, %r99;
	max.ftz.f32 	%f213, %f212, %f192;
	max.ftz.f32 	%f214, %f213, %f165;
	cvt.ftz.sat.f32.f32 	%f215, %f214;
	mov.f32 	%f216, 0f3f800000;   	// 1
	sub.ftz.f32 	%f217, %f216, %f215;
	selp.f32 	%f218, %f217, %f215, %p49;
	cvt.ftz.sat.f32.f32 	%f219, %f218;
	mov.f32 	%f220, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p50, %f219, %f220;
	@!%p50 bra 	$Lt_1_71426;
	ld.global.f32 	%f221, [inSecondaryParameters+44];
	ld.global.f32 	%f222, [inSecondaryParameters+36];
	setp.ge.ftz.f32 	%p51, %f221, %f222;
	@!%p51 bra 	$Lt_1_77826;
	sub.ftz.f32 	%f223, %f221, %f222;
	mov.f32 	%f224, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p52, %f223, %f224;
	@!%p52 bra 	$Lt_1_77826;
	mov.f32 	%f225, 0f00000000;   	// 0
	bra.uni 	$L_1_60162;
$Lt_1_77826:
$L_1_59650:
	setp.lt.ftz.f32 	%p53, %f221, %f222;
	@!%p53 bra 	$Lt_1_78338;
	sub.ftz.f32 	%f226, %f222, %f221;
	mov.f32 	%f227, 0f358637bd;   	// 1e-006
	setp.lt.ftz.f32 	%p54, %f226, %f227;
	@!%p54 bra 	$Lt_1_78338;
	mov.f32 	%f225, 0f3f800000;   	// 1
	bra.uni 	$L_1_60162;
$Lt_1_78338:
$L_1_60418:
	sub.ftz.f32 	%f228, %f221, %f222;
	mov.f32 	%f229, 0f3f1645a2;   	// 0.587
	mul.ftz.f32 	%f230, %f2, %f229;
	mov.f32 	%f231, 0f3e991687;   	// 0.299
	fma.rn.ftz.f32 	%f232, %f231, %f3, %f230;
	mov.f32 	%f233, 0f3de978d5;   	// 0.114
	fma.rn.ftz.f32 	%f234, %f233, %f1, %f232;
	cvt.ftz.sat.f32.f32 	%f235, %f234;
	sub.ftz.f32 	%f236, %f235, %f222;
	mov.f32 	%f237, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p55, %f236, %f237;
	mov.f32 	%f238, 0f3f800000;   	// 1
	add.ftz.f32 	%f239, %f236, %f238;
	selp.f32 	%f240, %f239, %f236, %p55;
	mov.f32 	%f241, 0f3f800000;   	// 1
	mov.f32 	%f242, 0f00000000;   	// 0
	mov.f32 	%f243, 0f3f800000;   	// 1
	add.ftz.f32 	%f244, %f228, %f243;
	mov.f32 	%f245, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p56, %f228, %f245;
	selp.f32 	%f246, %f244, %f228, %p56;
	set.ge.ftz.u32.f32 	%r100, %f246, %f240;
	neg.s32 	%r101, %r100;
	mov.f32 	%f247, 0f00000000;   	// 0
	set.ge.ftz.u32.f32 	%r102, %f240, %f247;
	neg.s32 	%r103, %r102;
	and.b32 	%r104, %r101, %r103;
	neg.s32 	%r105, %r104;
	slct.f32.s32 	%f225, %f242, %f241, %r105;
$L_1_60162:
$L_1_59394:
	mov.f32 	%f248, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p57, %f225, %f248;
	@!%p57 bra 	$Lt_1_71938;
	mov.f32 	%f249, 0f3f1645a2;   	// 0.587
	mul.ftz.f32 	%f250, %f2, %f249;
	ld.global.f32 	%f251, [inSecondaryParameters+32];
	sub.ftz.f32 	%f252, %f222, %f251;
	mov.f32 	%f253, 0f3e991687;   	// 0.299
	fma.rn.ftz.f32 	%f254, %f253, %f3, %f250;
	mov.f32 	%f255, 0f3de978d5;   	// 0.114
	fma.rn.ftz.f32 	%f256, %f255, %f1, %f254;
	cvt.ftz.sat.f32.f32 	%f235, %f256;
	sub.ftz.f32 	%f257, %f235, %f252;
	mov.f32 	%f258, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p58, %f257, %f258;
	mov.f32 	%f259, 0f3f800000;   	// 1
	add.ftz.f32 	%f260, %f257, %f259;
	selp.f32 	%f261, %f260, %f257, %p58;
	sub.ftz.f32 	%f262, %f251, %f222;
	setp.lt.ftz.f32 	%p59, %f261, %f262;
	@!%p59 bra 	$Lt_1_72450;
	mov.f32 	%f263, 0f00000000;   	// 0
	bra.uni 	$Lt_1_72706;
$Lt_1_72450:
	sub.ftz.f32 	%f264, %f222, %f252;
	mov.f32 	%f265, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p60, %f264, %f265;
	mov.f32 	%f266, 0f3f800000;   	// 1
	add.ftz.f32 	%f267, %f264, %f266;
	selp.f32 	%f268, %f267, %f264, %p60;
	set.le.ftz.u32.f32 	%r106, %f268, %f261;
	neg.s32 	%r107, %r106;
	mov.f32 	%f269, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r108, %f261, %f269;
	neg.s32 	%r109, %r108;
	or.b32 	%r110, %r107, %r109;
	mov.u32 	%r111, 0;
	setp.eq.s32 	%p61, %r110, %r111;
	@%p61 bra 	$Lt_1_72962;
	mov.f32 	%f263, 0f00000000;   	// 0
	bra.uni 	$Lt_1_72706;
$Lt_1_72962:
	div.approx.ftz.f32 	%f263, %f261, %f268;
$Lt_1_72706:
$Lt_1_72194:
	mov.f32 	%f270, %f263;
	mov.f32 	%f271, 0f3f800000;   	// 1
	setp.lt.ftz.f32 	%p62, %f263, %f271;
	@!%p62 bra 	$Lt_1_73474;
	sub.ftz.f32 	%f272, %f235, %f221;
	mov.f32 	%f273, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p63, %f272, %f273;
	mov.f32 	%f274, 0f3f800000;   	// 1
	add.ftz.f32 	%f275, %f272, %f274;
	selp.f32 	%f276, %f275, %f272, %p63;
	mov.f32 	%f277, 0f3f800000;   	// 1
	sub.ftz.f32 	%f278, %f277, %f221;
	setp.gt.ftz.f32 	%p64, %f276, %f278;
	@!%p64 bra 	$Lt_1_73986;
	mov.f32 	%f279, 0f00000000;   	// 0
	bra.uni 	$Lt_1_74242;
$Lt_1_73986:
	ld.global.f32 	%f280, [inSecondaryParameters+40];
	add.ftz.f32 	%f281, %f280, %f221;
	sub.ftz.f32 	%f282, %f281, %f221;
	mov.f32 	%f283, 0f00000000;   	// 0
	setp.lt.ftz.f32 	%p65, %f282, %f283;
	mov.f32 	%f284, 0f3f800000;   	// 1
	add.ftz.f32 	%f285, %f282, %f284;
	selp.f32 	%f286, %f285, %f282, %p65;
	set.le.ftz.u32.f32 	%r112, %f286, %f276;
	neg.s32 	%r113, %r112;
	mov.f32 	%f287, 0f00000000;   	// 0
	set.lt.ftz.u32.f32 	%r114, %f276, %f287;
	neg.s32 	%r115, %r114;
	or.b32 	%r116, %r113, %r115;
	mov.u32 	%r117, 0;
	setp.eq.s32 	%p66, %r116, %r117;
	@%p66 bra 	$Lt_1_74498;
	mov.f32 	%f279, 0f00000000;   	// 0
	bra.uni 	$Lt_1_74242;
$Lt_1_74498:
	mov.f32 	%f288, 0f3f800000;   	// 1
	div.approx.ftz.f32 	%f289, %f276, %f286;
	sub.ftz.f32 	%f279, %f288, %f289;
$Lt_1_74242:
$Lt_1_73730:
	mov.f32 	%f290, %f279;
	bra.uni 	$Lt_1_71682;
$Lt_1_73474:
	mov.f32 	%f290, 0f00000000;   	// 0
	bra.uni 	$Lt_1_71682;
$Lt_1_71938:
	mov.f32 	%f290, 0f00000000;   	// 0
	mov.f32 	%f270, 0f00000000;   	// 0
$Lt_1_71682:
	max.ftz.f32 	%f291, %f290, %f270;
	max.ftz.f32 	%f292, %f291, %f225;
	cvt.ftz.sat.f32.f32 	%f293, %f292;
	mov.f32 	%f294, 0f3f800000;   	// 1
	sub.ftz.f32 	%f295, %f294, %f293;
	selp.f32 	%f296, %f295, %f293, %p49;
	cvt.ftz.sat.f32.f32 	%f297, %f296;
	mul.ftz.f32 	%f298, %f219, %f61;
	mul.ftz.f32 	%f299, %f297, %f298;
	mov.f32 	%f300, 0f00000000;   	// 0
	mov.f32 	%f301, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p67, %f297, %f301;
	selp.f32 	%f302, %f299, %f300, %p67;
	bra.uni 	$Lt_1_67586;
$Lt_1_71426:
	mov.f32 	%f302, 0f00000000;   	// 0
	bra.uni 	$Lt_1_67586;
$Lt_1_67842:
	mov.f32 	%f302, 0f00000000;   	// 0
$Lt_1_67586:
	ld.global.f32 	%f303, [inSecondaryParameters+56];
	mov.f32 	%f304, 0f00000000;   	// 0
	setp.neu.ftz.f32 	%p68, %f303, %f304;
	@!%p68 bra 	$Lt_1_74754;
	mov.f32 	%f305, 0f00000000;   	// 0
	setp.ge.ftz.f32 	%p69, %f302, %f305;
	@!%p69 bra 	$Lt_1_75522;
	lg2.approx.ftz.f32 	%f306, %f302;
	mov.f32 	%f307, 0f41200000;   	// 10
	lg2.approx.ftz.f32 	%f308, %f307;
	mul.ftz.f32 	%f309, %f303, %f308;
	ex2.approx.ftz.f32 	%f310, %f309;
	rcp.approx.ftz.f32 	%f311, %f310;
	mul.ftz.f32 	%f312, %f306, %f311;
	ex2.approx.ftz.f32 	%f313, %f312;
	bra.uni 	$Lt_1_75266;
$Lt_1_75522:
	neg.ftz.f32 	%f314, %f302;
	lg2.approx.ftz.f32 	%f315, %f314;
	mov.f32 	%f316, 0f41200000;   	// 10
	lg2.approx.ftz.f32 	%f317, %f316;
	mul.ftz.f32 	%f318, %f303, %f317;
	ex2.approx.ftz.f32 	%f319, %f318;
	rcp.approx.ftz.f32 	%f320, %f319;
	mul.ftz.f32 	%f321, %f315, %f320;
	ex2.approx.ftz.f32 	%f322, %f321;
	neg.ftz.f32 	%f313, %f322;
$Lt_1_75266:
	mov.f32 	%f302, %f313;
$Lt_1_74754:
	cvt.ftz.sat.f32.f32 	%f323, %f302;
	mov.f32 	%f324, 0f3f800000;   	// 1
	sub.ftz.f32 	%f325, %f324, %f323;
	mov.s32 	%r118, 2;
	setp.eq.s32 	%p70, %r55, %r118;
	selp.f32 	%f302, %f325, %f323, %p70;
	ld.param.u64 	%rd7, [__cudaparm_SecondaryColorCorrection_inSecondaryMask];
	ld.param.s32 	%r119, [__cudaparm_SecondaryColorCorrection_inSecondaryPitch];
	mul.lo.s32 	%r120, %r119, %r10;
	add.s32 	%r121, %r8, %r120;
	cvt.s64.s32 	%rd8, %r121;
	mul.wide.s32 	%rd9, %r121, 4;
	add.u64 	%rd10, %rd7, %rd9;
	st.global.f32 	[%rd10+0], %f302;
$Lt_1_60930:
	exit;
$LDWend_SecondaryColorCorrection:
	} // SecondaryColorCorrection
	.global .align 4 .b8 kRGB32f_To_601YPbPr[36] = {135,22,153,62,162,69,22,63,213,120,233,61,33,201,44,190,111,155,169,190,0,0,0,63,0,0,0,63,70,94,214,190,232,134,166,189};
	.const .align 4 .b8 k601YPbPr_To_RGB32f[36] = {0,0,128,63,0,0,0,0,188,116,179,63,0,0,128,63,152,50,176,190,158,209,54,191,0,0,128,63,229,208,226,63,0,0,0,0};
	.const .align 4 .b8 kRGB32f_To_601YCbCr[36] = {70,246,130,66,145,141,0,67,94,186,199,65,33,48,23,194,240,103,148,194,0,0,224,66,0,0,224,66,111,146,187,194,70,182,145,193};
	.const .align 4 .b8 k601YCbCr_To_RGB32f[36] = {37,160,149,59,0,0,0,0,182,23,205,59,37,160,149,59,40,15,201,186,156,239,80,187,37,160,149,59,236,155,1,60,0,0,0,0};
	.const .align 4 .b8 kRGB8u_To_601YCbCr[36] = {219,121,131,62,152,14,1,63,18,131,200,61,174,199,23,190,238,252,148,190,197,224,224,62,197,224,224,62,217,78,188,190,174,71,146,189};
	.const .align 4 .b8 k601YCbCr_To_RGB8u[36] = {127,10,149,63,0,0,0,0,160,74,204,63,127,10,149,63,254,148,200,190,184,30,80,191,127,10,149,63,78,26,1,64,0,0,0,0};
	.const .align 4 .b8 kRGB8u_To_601YCbCrFullRange[36] = {135,22,153,62,162,69,22,63,213,120,233,61,166,27,44,190,39,241,168,190,250,254,254,62,250,254,254,62,43,135,213,190,59,223,165,189};
	.const .align 4 .b8 k601YCbCrFullRange_To_RGB8u[36] = {0,0,128,63,0,0,0,0,72,193,178,63,0,0,128,63,143,130,175,190,225,26,54,191,0,0,128,63,20,238,225,63,0,0,0,0};
	.const .align 4 .b8 kRGB32f_To_601YCbCrFullRange[36] = {113,125,152,66,92,175,21,67,92,143,232,65,158,111,43,194,49,72,168,194,0,0,254,66,0,0,254,66,170,177,212,194,88,57,165,193};
	.const .align 4 .b8 k601YCbCrFullRange_To_RGB32f[36] = {129,128,128,59,0,0,0,0,188,116,179,59,129,128,128,59,194,50,176,186,179,209,54,187,129,128,128,59,229,208,226,59,0,0,0,0};
	.const .align 4 .b8 kRGB32f_To_709YPbPr[36] = {208,179,89,62,89,23,55,63,152,221,147,61,186,164,234,189,210,86,197,190,0,0,0,63,0,0,0,63,190,134,232,190,16,202,59,189};
	.const .align 4 .b8 k709YPbPr_To_RGB32f[36] = {0,0,128,63,0,0,0,0,12,147,201,63,0,0,128,63,221,209,63,190,243,173,239,190,0,0,128,63,77,132,237,63,0,0,0,0};
	.const .align 4 .b8 kRGB32f_To_709YCbCr[36] = {106,60,58,66,6,161,28,67,244,253,124,65,223,79,205,193,8,172,172,194,0,0,224,66,0,0,224,66,195,117,203,194,236,81,36,193};
	.const .align 4 .b8 k709YCbCr_To_RGB32f[36] = {37,160,149,59,0,0,0,0,239,94,230,59,37,160,149,59,33,57,91,186,178,245,8,187,37,160,149,59,82,185,7,60,0,0,0,0};
	.const .align 4 .b8 k709YCbCrFullRange_To_RGB32f[36] = {131,128,128,59,0,0,0,0,28,147,201,59,131,128,128,59,61,210,63,186,248,173,239,186,131,128,128,59,82,132,237,59,0,0,0,0};
	.const .align 4 .b8 kRGB8u_To_709YCbCr[36] = {207,247,58,62,53,62,29,63,231,251,125,61,147,24,206,61,23,89,173,190,197,224,224,62,197,224,224,62,12,66,204,190,195,245,36,189};
	.const .align 4 .b8 k709YCbCr_To_RGB8u[36] = {127,10,149,63,0,0,0,0,147,120,229,63,127,10,149,63,53,94,90,190,205,108,8,191,127,10,149,63,154,49,7,64,0,0,0,0};
	.const .align 4 .b8 k709YCbCr_To_601YCbCr[36] = {0,0,128,63,23,100,203,61,1,77,68,62,0,0,0,0,18,103,125,63,10,158,226,189,0,0,0,0,61,98,148,189,249,191,123,63};
	.const .align 4 .b8 k601YCbCr_To_709YCbCr[36] = {0,0,128,63,122,165,236,189,179,237,84,190,0,0,0,0,204,98,130,63,216,188,234,61,0,0,0,0,74,179,153,61,234,61,131,63};
	.const .align 4 .b8 kYCbCrOffset[12] = {0,0,128,65,0,0,0,67,0,0,0,67};
	.const .align 4 .b8 kYCbCrFullRangeOffset[12] = {0,0,0,0,0,0,0,67,0,0,0,67};

